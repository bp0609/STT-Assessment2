# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.graph.all_pairs_shortest_path as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    set_0 = {bool_0}
    module_0.all_pairs_shortest_path(set_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.all_pairs_shortest_path(list_0)
    var_1 = module_0.all_pairs_shortest_path(list_0)
    var_2 = module_0.all_pairs_shortest_path(list_0)
    var_3 = module_0.all_pairs_shortest_path(var_1)
    var_4 = module_0.all_pairs_shortest_path(var_2)
    var_5 = module_0.all_pairs_shortest_path(var_1)
    var_6 = module_0.all_pairs_shortest_path(list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.all_pairs_shortest_path(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    list_0 = [bool_0, bool_0]
    bool_1 = True
    tuple_0 = (list_0, bool_1)
    module_0.all_pairs_shortest_path(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"q\xff\xf1:\x9dB"
    list_0 = [bytes_0, bytes_0, bytes_0]
    var_0 = module_0.all_pairs_shortest_path(list_0)
    str_0 = '0+{oCjG~|"4n'
    module_0.all_pairs_shortest_path(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ";9;0+QBXbGQ)YOr[$(9"
    list_0 = [str_0, str_0, str_0, str_0]
    module_0.all_pairs_shortest_path(list_0)
