# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.graph.bellman_ford as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xc5\x96\xb6\x8c\xad\xb9eEI\xee\xd4\xda6\xe3l\xec\xc1\x92P"
    module_0.bellman_ford(bytes_0, bytes_0)


def test_case_1():
    str_0 = "@g']\x0c"
    list_0 = []
    var_0 = module_0.bellman_ford(list_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "@g']\x0c"
    list_0 = [str_0]
    module_0.bellman_ford(list_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "@g']\x0c"
    dict_0 = {str_0: str_0}
    module_0.bellman_ford(dict_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "@g']\x0c"
    bool_0 = True
    list_0 = [bool_0, str_0, bool_0]
    module_0.bellman_ford(list_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "!\n1(~\tPJWe"
    list_0 = []
    var_0 = module_0.bellman_ford(list_0, str_0)
    dict_0 = {str_0: list_0, var_0: str_0}
    module_0.bellman_ford(dict_0, var_0)


def test_case_6():
    str_0 = ""
    list_0 = []
    var_0 = module_0.bellman_ford(list_0, str_0)
    dict_0 = {str_0: list_0, var_0: str_0}
    var_1 = module_0.bellman_ford(dict_0, var_0)
    assert var_1 is True


def test_case_7():
    str_0 = ""
    var_0 = module_0.bellman_ford(str_0, str_0)
    dict_0 = {
        str_0: var_0,
        str_0: str_0,
        str_0: var_0,
        str_0: var_0,
        str_0: var_0,
        var_0: var_0,
        var_0: var_0,
    }
    dict_1 = {var_0: dict_0, str_0: str_0, str_0: dict_0}
    var_1 = module_0.bellman_ford(dict_1, var_0)
    assert var_1 is True
