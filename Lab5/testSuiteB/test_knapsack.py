# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dp.knapsack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    module_0.get_maximum_value(set_0, bool_0)


def test_case_1():
    list_0 = []
    item_0 = module_0.Item(list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -828
    item_0 = module_0.Item(int_0, int_0)
    item_1 = module_0.Item(item_0, item_0)
    dict_0 = {item_0: int_0, item_0: int_0, int_0: int_0, item_0: int_0}
    module_0.get_maximum_value(dict_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -828
    int_1 = 770
    item_0 = module_0.Item(int_1, int_1)
    item_1 = module_0.Item(item_0, item_0)
    dict_0 = {item_0: int_0, item_0: int_0, int_0: int_1, item_0: int_0}
    module_0.get_maximum_value(dict_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -828
    int_1 = 770
    item_0 = module_0.Item(int_1, int_1)
    tuple_0 = ()
    var_0 = module_0.get_maximum_value(tuple_0, int_1)
    assert var_0 == 0
    item_1 = module_0.Item(item_0, item_0)
    dict_0 = {item_0: int_0, item_0: int_0, int_0: int_1, item_0: int_0}
    module_0.get_maximum_value(dict_0, int_0)
